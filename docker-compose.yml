version: '3.9' # Updated version for latest features and compatibility

# Define reusable configurations for Spark workers
x-spark-common: &spark-common
  image: bitnami/spark:latest # Official Bitnami Spark Docker image
  volumes:
    - ./jobs:/opt/bitnami/spark/jobs # Mount the local 'jobs' directory to the container
    - ./input:/opt/bitnami/spark/input # Mount the local 'input' directory for additional data
  command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
  depends_on:
    - spark-master # Ensure Spark Master is up before launching workers
  environment:
    SPARK_MODE: Worker # Run Spark in worker mode
    SPARK_WORKER_CORES: 2 # Allocate 2 CPU cores for each worker
    SPARK_WORKER_MEMORY: 2g # Allocate 2GB memory for each worker
    SPARK_MASTER_URL: spark://spark-master:7077 # URL to connect to the Spark Master
  networks:
    - datamasterylab # Attach to a custom network for inter-container communication

services:
  spark-master:
    image: bitnami/spark:latest # Official Bitnami Spark Docker image for the master
    container_name: spark-master # Assign a meaningful name to the container
    volumes:
      - ./jobs:/opt/bitnami/spark/jobs # Mount the local 'jobs' directory to the master
      - ./input:/opt/bitnami/spark/input # Mount the 'input' directory to the master
    command: bin/spark-class org.apache.spark.deploy.master.Master # Command to run Spark Master
    ports:
      - "8080:8080" # Map Spark Web UI to port 8080
      - "7077:7077" # Map Spark Master service to port 7077
    networks:
      - datamasterylab # Attach to the same network for communication

  spark-worker-1:
    <<: *spark-common # Inherit configuration from the reusable block

  spark-worker-2:
    <<: *spark-common # Inherit configuration from the reusable block

  spark-worker-3:
    <<: *spark-common # Inherit configuration from the reusable block

  spark-worker-4:
    <<: *spark-common # Inherit configuration from the reusable block

networks:
  datamasterylab:
    driver: bridge # Use bridge networking to allow container-to-container communication
